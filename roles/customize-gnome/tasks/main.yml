---
# tasks file for PeterMosmans.customize-gnome

- name: Parse Gnome Shell version
  shell: gnome-shell --version | sed 's/[^0-9.]*\([0-9.]*\).*/\1/'
  register: r_gnome_extension_parse_shell_version
  changed_when: no

- set_fact:
    gnome_shell_version: "{{ r_gnome_extension_parse_shell_version.stdout }}"

- name: Install (font) packages
  apt:
    name: "{{ item }}"
    update_cache: yes
    install-recommends: no
    state: present
  with_items: "{{ gnome_packages }}"

- name: Ensure that target directory exists
  file:
    path: "/home/{{ gnome_user }}/.config/{{ gtk_version }}"
    state: directory
  become_user: "{{ gnome_user }}"
  become: true
  when: gtk_version is defined

- name: Copy files
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ gnome_user }}"
    group: "{{ gnome_user }}"
    mode: 0644
  with_items: "{{ gnome_files }}"
  tags:
    - files

- name: Download zipped font files
  get_url:
    url: "{{ item.url }}"
    dest: "/tmp/{{ item.name }}.zip"
  with_items: "{{ gnome_fonts }}"
  tags:
    - fonts

- name: Unzip font files
  unarchive:
    src: "/tmp/{{ item.name }}.zip"
    dest: "/tmp/"
    remote_src: yes
  with_items: "{{ gnome_fonts }}"
  tags:
    - fonts

- name: Install fonts
  shell: mv /tmp/{{ item.fonts }} /usr/local/share/fonts/
  with_items: "{{ gnome_fonts }}"
  tags:
    - fonts

- name: Refresh font list
  shell: fc-cache -fv
  tags:
    - fonts

- name: Load Gnome extension information
  include_tasks: get_extension_info.yml
  with_items: "{{ gnome_extensions }}"

- name: Use gnome_extensions_full
  set_fact:
    gnome_extensions: "{{ gnome_extensions_full }}"

- name: Download GNOME Shell extensions
  get_url:
    url: "{{ item.url }}"
    dest: "/tmp/{{ item.name }}.zip"
  with_items: "{{ gnome_extensions }}"
  tags:
    - extensions

- name: Create GNOME extension directories
  file:
    path: /home/{{ gnome_user }}/.local/share/gnome-shell/extensions/{{ item.name }}
    state: directory
    recurse: true
  become_user: "{{ gnome_user }}"
  become: true
  with_items: "{{ gnome_extensions }}"
  tags:
    - extensions

- name: Unzip GNOME extensions
  unarchive:
    src: "/tmp/{{ item.name }}.zip"
    dest: "/home/{{ gnome_user }}/.local/share/gnome-shell/extensions/{{ item.name }}"
    creates: "/home/{{ gnome_user }}/.local/share/gnome-shell/extensions/{{ item.name }}/metadata.json"
    remote_src: yes
  become_user: "{{ gnome_user }}"
  become: true
  with_items: "{{ gnome_extensions }}"
  tags:
    - extensions

# Added by Oskar. There is now a better command line tool for extension handling.
- name: Enable GNOME extensions
  shell:
    cmd: "gnome-extensions enable {{ item.name }}"
  become_user: "{{ gnome_user }}"
  become: true
  with_items: "{{ gnome_extensions }}"
  tags:
    - extensions

- name: Modify application settings using gsettings
  shell: dbus-launch gsettings set {{ item.schema }} {{ item.key }} {{ item.value }}
  become_user: "{{ gnome_user }}"
  become: true
  with_items: "{{ gnome_gsettings }}"
  tags:
    - settings

- name: Modify application settings using dconf
  shell: dbus-launch dconf write {{ item.key }} {{ item.value }}
  become_user: "{{ gnome_user }}"
  become: true
  with_items: "{{ gnome_dconf }}"
  tags:
    - settings
    - dconf
